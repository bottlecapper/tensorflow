
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& 20170201 &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
# run in PyCharm

Script:
/home/jg/miniconda3/lib/python3.5/site-packages/tensorflow/models/image/mnist/convolutional.py

Python interpreter:
Python 3.5.2 (~/miniconda3/bin/python)

Environment Variables:
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64
CUDA_HOME=/usr/local/cuda

Working directory:
/home/jg/miniconda3/lib/python3.5/site-packages/tensorflow/models/image/mnist





&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& 20170204 &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
1540
When run the tutorial Deep MNIST for Experts, there's a problemï¼š
could not find cudnnCreate in cudnn DSO
Add environment variable: 
PATH=/usr/local/cuda/bin
CUDA_HOME=/usr/local/cuda
LD_LIBRARY_PATH=/usr/local/cuda/lib64


&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& 20170205 &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
TensorBoard
in the terminal, run:
tensorboard --logdir=/tmp/tensorflow/mnist/logs/fully_connected_feed
localhost:6006

20170205/1100
tensorboard --logdir=/tmp/tensorflow/mnist/logs/mnist_with_summaries/


&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& 20170206 &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
when run the DCGANs code, 
TypeError: sigmoid_cross_entropy_with_logits() got an unexpected keyword argument 'labels'
Installing from sources (install the newest version of Tensorflow)
https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md
at <Configure the installation>

####################################
jg@JG:~/tensorflow$ ./configure
Please specify the location of python. [Default is /home/jg/miniconda3/bin/python]: 
Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified [Default is -march=native]: 
Do you wish to use jemalloc as the malloc implementation? [Y/n] y
jemalloc enabled
Do you wish to build TensorFlow with Google Cloud Platform support? [y/N] n
No Google Cloud Platform support will be enabled for TensorFlow
Do you wish to build TensorFlow with Hadoop File System support? [y/N] n
No Hadoop File System support will be enabled for TensorFlow
Do you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] n
No XLA JIT support will be enabled for TensorFlow
Found possible Python library paths:
  /home/jg/code
  /home/jg/miniconda3/lib/python3.5/site-packages
Please input the desired Python library path to use.  Default is [/home/jg/miniconda3/lib/python3.5/site-packages]
Using python library path: /home/jg/miniconda3/lib/python3.5/site-packages
Do you wish to build TensorFlow with OpenCL support? [y/N] n
No OpenCL support will be enabled for TensorFlow
Do you wish to build TensorFlow with CUDA support? [y/N] y
CUDA support will be enabled for TensorFlow
Please specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: 
Please specify the Cudnn version you want to use. [Leave empty to use system default]: 5
Please specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: 
Please specify a list of comma-separated Cuda compute capabilities you want to build with.
You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.
Please note that each additional compute capability significantly increases your build time and binary size.
[Default is: "3.5,5.2"]: 3.0
........
INFO: Starting clean (this may take a while). Consider using --expunge_async if the clean takes more than several minutes.
.......
INFO: All external dependencies fetched successfully.
Configuration finished
####################################
jg@JG:~/tensorflow$ bazel build --config opt //tensorflow/tools/pip_package:build_pip_package
jg@JG:~/tensorflow$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg
jg@JG:~/tensorflow$ sudo pip3 install /tmp/tensorflow_pkg/tensorflow-0.12.1-cp35-cp35m-linux_x86_64.whl




















